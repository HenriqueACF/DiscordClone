{"ast":null,"code":"import { __assign, __makeTemplateObject, __rest } from \"tslib\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport validProp from '@emotion/is-prop-valid';\n\nfunction isValidProp(key) {\n  return validProp(key);\n}\n\nfunction filterSVGProps(props) {\n  return Object.keys(props).reduce(function (p, k) {\n    if (isValidProp(k)) {\n      // hack to satisfy TypeScript complexity\n      ;\n      p[k] = props[k];\n    }\n\n    return p;\n  }, {});\n}\n\nvar StyledIconBaseBase = React.forwardRef(function (props, ref) {\n  var children = props.children,\n      iconAttrs = props.iconAttrs,\n      iconVerticalAlign = props.iconVerticalAlign,\n      iconViewBox = props.iconViewBox,\n      size = props.size,\n      title = props.title,\n      otherProps = __rest(props, [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"]);\n\n  var iconProps = __assign({\n    viewBox: iconViewBox,\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined\n  }, iconAttrs);\n\n  var svgProps = filterSVGProps(otherProps);\n  return React.createElement(\"svg\", __assign({}, iconProps, svgProps, {\n    ref: ref\n  }), title && React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\nexport var StyledIconBase = styled(StyledIconBaseBase)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: inline-block;\\n  vertical-align: \", \";\\n  overflow: hidden;\\n\"], [\"\\n  display: inline-block;\\n  vertical-align: \", \";\\n  overflow: hidden;\\n\"])), function (props) {\n  return props.iconVerticalAlign;\n});\nvar templateObject_1;","map":{"version":3,"sources":["/home/henrique/√Årea de Trabalho/projetos/discord-clone/node_modules/@styled-icons/styled-icon/dist/index.esm.js"],"names":["__assign","__makeTemplateObject","__rest","React","styled","validProp","isValidProp","key","filterSVGProps","props","Object","keys","reduce","p","k","StyledIconBaseBase","forwardRef","ref","children","iconAttrs","iconVerticalAlign","iconViewBox","size","title","otherProps","iconProps","viewBox","height","undefined","width","focusable","role","svgProps","createElement","StyledIconBase","templateObject_1"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,oBAAnB,EAAyCC,MAAzC,QAAuD,OAAvD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACtB,SAAOF,SAAS,CAACE,GAAD,CAAhB;AACH;;AACD,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,SAAOC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7C,QAAIR,WAAW,CAACQ,CAAD,CAAf,EAAoB;AAChB;AACA;AACAD,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOL,KAAK,CAACK,CAAD,CAAZ;AACH;;AACD,WAAOD,CAAP;AACH,GAPM,EAOJ,EAPI,CAAP;AAQH;;AACD,IAAIE,kBAAkB,GAAGZ,KAAK,CAACa,UAAN,CAAiB,UAAUP,KAAV,EAAiBQ,GAAjB,EAAsB;AAC5D,MAAIC,QAAQ,GAAGT,KAAK,CAACS,QAArB;AAAA,MAA+BC,SAAS,GAAGV,KAAK,CAACU,SAAjD;AAAA,MAA4DC,iBAAiB,GAAGX,KAAK,CAACW,iBAAtF;AAAA,MAAyGC,WAAW,GAAGZ,KAAK,CAACY,WAA7H;AAAA,MAA0IC,IAAI,GAAGb,KAAK,CAACa,IAAvJ;AAAA,MAA6JC,KAAK,GAAGd,KAAK,CAACc,KAA3K;AAAA,MAAkLC,UAAU,GAAGtB,MAAM,CAACO,KAAD,EAAQ,CAAC,UAAD,EAAa,WAAb,EAA0B,mBAA1B,EAA+C,aAA/C,EAA8D,MAA9D,EAAsE,OAAtE,CAAR,CAArM;;AACA,MAAIgB,SAAS,GAAGzB,QAAQ,CAAC;AAAE0B,IAAAA,OAAO,EAAEL,WAAX;AAAwBM,IAAAA,MAAM,EAAElB,KAAK,CAACkB,MAAN,KAAiBC,SAAjB,GAA6BnB,KAAK,CAACkB,MAAnC,GAA4CL,IAA5E;AAAkFO,IAAAA,KAAK,EAAEpB,KAAK,CAACoB,KAAN,KAAgBD,SAAhB,GAA4BnB,KAAK,CAACoB,KAAlC,GAA0CP,IAAnI;AAAyI,mBAAeC,KAAK,IAAI,IAAT,GAAgB,MAAhB,GAAyBK,SAAjL;AAA4LE,IAAAA,SAAS,EAAE,OAAvM;AAAgNC,IAAAA,IAAI,EAAER,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwBK;AAA9O,GAAD,EAA4PT,SAA5P,CAAxB;;AACA,MAAIa,QAAQ,GAAGxB,cAAc,CAACgB,UAAD,CAA7B;AACA,SAAQrB,KAAK,CAAC8B,aAAN,CAAoB,KAApB,EAA2BjC,QAAQ,CAAC,EAAD,EAAKyB,SAAL,EAAgBO,QAAhB,EAA0B;AAAEf,IAAAA,GAAG,EAAEA;AAAP,GAA1B,CAAnC,EACJM,KAAK,IAAIpB,KAAK,CAAC8B,aAAN,CAAoB,OAApB,EAA6B;AAAE1B,IAAAA,GAAG,EAAE;AAAP,GAA7B,EAAoDgB,KAApD,CADL,EAEJL,QAFI,CAAR;AAGH,CAPwB,CAAzB;AAQA,OAAO,IAAIgB,cAAc,GAAG9B,MAAM,CAACW,kBAAD,CAAN,CAA2BoB,gBAAgB,KAAKA,gBAAgB,GAAGlC,oBAAoB,CAAC,CAAC,gDAAD,EAAmD,0BAAnD,CAAD,EAAiF,CAAC,gDAAD,EAAmD,0BAAnD,CAAjF,CAA5C,CAA3C,EAA0P,UAAUQ,KAAV,EAAiB;AAAE,SAAOA,KAAK,CAACW,iBAAb;AAAiC,CAA9S,CAArB;AACP,IAAIe,gBAAJ","sourcesContent":["import { __assign, __makeTemplateObject, __rest } from \"tslib\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport validProp from '@emotion/is-prop-valid';\nfunction isValidProp(key) {\n    return validProp(key);\n}\nfunction filterSVGProps(props) {\n    return Object.keys(props).reduce(function (p, k) {\n        if (isValidProp(k)) {\n            // hack to satisfy TypeScript complexity\n            ;\n            p[k] = props[k];\n        }\n        return p;\n    }, {});\n}\nvar StyledIconBaseBase = React.forwardRef(function (props, ref) {\n    var children = props.children, iconAttrs = props.iconAttrs, iconVerticalAlign = props.iconVerticalAlign, iconViewBox = props.iconViewBox, size = props.size, title = props.title, otherProps = __rest(props, [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"]);\n    var iconProps = __assign({ viewBox: iconViewBox, height: props.height !== undefined ? props.height : size, width: props.width !== undefined ? props.width : size, 'aria-hidden': title == null ? 'true' : undefined, focusable: 'false', role: title != null ? 'img' : undefined }, iconAttrs);\n    var svgProps = filterSVGProps(otherProps);\n    return (React.createElement(\"svg\", __assign({}, iconProps, svgProps, { ref: ref }),\n        title && React.createElement(\"title\", { key: \"icon-title\" }, title),\n        children));\n});\nexport var StyledIconBase = styled(StyledIconBaseBase)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: inline-block;\\n  vertical-align: \", \";\\n  overflow: hidden;\\n\"], [\"\\n  display: inline-block;\\n  vertical-align: \", \";\\n  overflow: hidden;\\n\"])), function (props) { return props.iconVerticalAlign; });\nvar templateObject_1;\n"]},"metadata":{},"sourceType":"module"}